/* 
 * There are N gas stations along a circular route, where the amount of gas at station i is gas[i].
 * You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to 
 * its next station (i+1). You begin the journey with an empty tank at one of the gas stations.
 *
 * Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.
 *
 * Note: The solution is guaranteed to be unique. 
 */
class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int n = gas.size();
        int i, total = 0;
        int start = 0, end = 0, tank = 0;
        for (i = 0; i < n; i++) {
            total += gas[i] - cost[i];
        }
        if (total < 0) return -1;
        while (true) {
            if (tank >= 0) {
                tank += gas[end] - cost[end];
                end = (end + 1) % n;
            } else {
                start = (start + n - 1) % n;
                tank += gas[start] - cost[start];
            }
            if (end == start) return start;
        }
        return -1;
    }
};
